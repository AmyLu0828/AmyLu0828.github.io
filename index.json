[{"content":"Introductory Resources Anthropic has this great introduction to AI Agents - from definition to basic patterns. This is the first post I read, and it gave me a general idea of what AI Agents are, and very importantly, the difference between AI Agents and workflows.\nBuilding Effective Agents\nNow, to actually start learning, I find this blog by Galileo a good guideline for the different stages (and complexities) in building AI Agents, and my learning is also pretty much down this path.\nA Field Guide to AI Agents\nStep 1: Workflows YouTube Tutorial\nI started with this YouTube tutorial (as I saw other Reddit posts recommending to start with this).\nWhy this is a good project at this step: It starts from the very basics of API calling, function calling, structured output and then explores different workflows (from Anthropic\u0026rsquo;s article) It uses pure Python and does not use any frameworks Uses an easy example of [your example here] What I learned: A workflow is essentially breaking down a problem into several steps, with each step taken care of by an LLM call and then chaining these calls together. What\u0026rsquo;s crucial here is to specify the connections between different calls, and this is where structured output comes in. Logging information is very helpful - it shows you in time which step the AI Agent is at, and is helpful for debugging Note: Not all AI models support structured output. I started with this tutorial using Groq - as it\u0026rsquo;s free and pretty good - but it does not support structured output, so I eventually switched to OpenAI. What I wonder: What is the actual difference between workflow and agents?\nStep 2 - Route 1: Basic Agents (ReAct) Obviously, Step 1 is not good enough, and although it is briefly introduced in Anthropic\u0026rsquo;s article, it makes me wonder: what is the actual difference between a workflow and an agent. I think I found the answer to this question through this project:\nText2SQL Project (Chinese)\nIt\u0026rsquo;s a text2sql project with simple coding and agent structure. It\u0026rsquo;s in Chinese though, but I\u0026rsquo;m sure it is possible to find similar tutorials in English.\nWhy this is a good project at this step: It\u0026rsquo;s implemented in two ways - a basic way (workflow), and an optimized way (agent + other optimizations). This makes the difference between a workflow and agent very clear. A great introduction to the ReAct (reasoning+action) framework All data are preprocessed - there are no tedious data cleaning required It uses a bit of Langchain, but I understood the code without any previous acquaintance with Langchain What I learned: The actual difference between workflows and agents:\nWorkflow: A manually designed structured sequence of steps, calling the LLM at each step Agent: An autonomous entity that can interpret inputs, generate and examine its own outputs, make decisions, and invoke actions dynamically Example:\nWorkflow:\nExtract schema from data Generate SQL (with user query and schema) Run SQL\n(The steps and connections between steps are predefined by us) Agent:\nExtract schema from data Generate SQL and wrap into a json request Decides whether to use tool run_sql_query Tool use If execution fails, goes back to (2); if it worked continues to (5) Decides whether to use tool file_saver (print the retrieved data into a file)\n(Steps 2-5 are all entirely controlled by the LLM) The ReAct framework - Thought (Reasoning) + Action. Seeing the output of the agent in the end makes it very clear how this framework is useful.\nSide knowledge #1: Basics of SQL, SQLite, Schema - I previously had no knowledge of any of these, but now have a vague sense of how these things work and how to interact with databases.\nSide knowledge #2: The project also optimizes schema with a more effective m_schema presented by Alibaba\u0026rsquo;s Xi-yan. Although I didn\u0026rsquo;t go into the details, it is interesting to see how the optimization works.\nWhat I wonder: Now, I\u0026rsquo;m interested in Langchain. The ReAct framework (which is the reason that this process is automated) is coded in Langchain.\n","permalink":"https://amylu0828.github.io/posts/mypost/","summary":"\u003ch2 id=\"introductory-resources\"\u003eIntroductory Resources\u003c/h2\u003e\n\u003cp\u003eAnthropic has this great introduction to \u003cstrong\u003eAI Agents\u003c/strong\u003e - from definition to basic patterns. This is the first post I read, and it gave me a general idea of what AI Agents are, and very importantly, the difference between AI Agents and workflows.\u003cbr\u003e\n\u003ca href=\"https://www.anthropic.com/engineering/building-effective-agents\"\u003eBuilding Effective Agents\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eNow, to actually start learning, I find this blog by Galileo a good guideline for the different stages (and complexities) in building AI Agents, and my learning is also pretty much down this path.\u003cbr\u003e\n\u003ca href=\"https://galileo.ai/blog/a-field-guide-to-ai-agents?utm_source=reddit\u0026amp;utm_content=ai_agents\"\u003eA Field Guide to AI Agents\u003c/a\u003e\u003c/p\u003e","title":"Getting Started with AI Agents"}]